QuickSort: 

O Quicksort √© um algoritmo de ordena√ß√£o que segue a abordagem "dividir para conquistar", 
ou seja, divide a lista em partes menores e as ordena separadamente. 

O Quicksort seleciona um elemento da lista, chamado de piv√¥, 
e rearranja os elementos da lista de forma que todos os elementos menores que o piv√¥ fiquem antes dele na lista, 
e todos os elementos maiores que o piv√¥ fiquem depois dele na lista. 

O piv√¥ ent√£o fica em sua posi√ß√£o final na lista ordenada. 
Esse processo √© aplicado recursivamente para as sublistas formadas antes e depois do piv√¥, 
at√© que toda a lista esteja ordenada.

Criado por Hoare em 1960 e publicado em 1962.
    √â o algoritmo de ordena√ß√£o mais r√°pido que se conhece para aplica√ß√µes gerais, sendo o mais usado.

Tamb√©m √© baseado em divis√£o e conquista: 
    Divide-se o conjunto em conjuntos menores, que s√£o ordenados recursivamente, provocando divis√µes
    consecutivas at√© chegar a um subconjunto unit√°rio.
    Depois os conjuntos s√£o recombinados para gerar a ordena√ß√£o final.
    Melhoramento no m√©todo b√°sico de ordena√ß√£o por permuta√ß√£o (bolha!)

Basicamente a opera√ß√£o do algoritmo pode ser resumida na seguinte estrat√©gia: 
    divide sua lista de entrada em duas sub-listas a partir de um piv√¥, 
    para em seguida realizar o mesmo procedimento nas duas listas menores at√© uma lista unit√°ria.

A divis√£o √© feita com base na escolha arbitr√°ria de um piv√¥:
    O vetor √© particionado em:
        Elementos <= que o piv√¥
        Elementos >= que o piv√¥

    O algoritmo consiste em percorrer o conjunto a partir da esquerda at√© o piv√¥, 
    e a partir da direita at√© o piv√¥.

    Quando um elemento maior ou igual que o piv√¥ for encontrado √† sua esquerda, 
    procure um menor ou igual que o piv√¥ na sua direita e troque;

    Repita at√© que os √≠ndices usados para varrer o vetor se cruzem.
    Chame o algoritmo recursivamente para as partes anterior e posterior ao piv√¥.

Vantagens:
    Extremamente eficiente para ordenar arquivos de dados
    Usa apenas uma pequena pilha como mem√≥ria auxiliar
    Requer ùëõ log ùëõ compara√ß√µes em m√©dia para ordenar ùëõ itens
Desvantagens:
    Pior caso: ùê∂ = ùëõ!
    Implementa√ß√£o mais complicada
    N√£o √© est√°vel.

Funcionamento do algoritmo:
    1.  Escolhe um elemento da lista chamado piv√¥.
    2.  Reorganiza a lista de forma que os elementos menores que o piv√¥ fiquem de um lado, 
        e os maiores fiquem de outro. Esta opera√ß√£o √© chamada de ‚Äúparticionamento‚Äù.
    3.  Recursivamente ordena a sub-lista abaixo e acima do piv√¥.

As etapas envolvidas no Quick Sort s√£o:
    1.  Escolha um elemento para servir como piv√¥, neste caso, o √∫ltimo elemento do array √© o piv√¥.
    2.  Particionamento: Ordene o array de forma que todos os elementos menores que o piv√¥ 
        fiquem √† esquerda e todos os elementos maiores que o piv√¥ fiquem √† direita.
    3.  Execute o algoritmo recursivamente, levando em considera√ß√£o o piv√¥ anterior para subdividir 
        adequadamente os arrays esquerdo e direito.